from pathlib import Path
import streamlit as st
import openai
from dotenv import load_dotenv, find_dotenv
import os
import tempfile

# Carrega as vari√°veis de ambiente
_ = load_dotenv(find_dotenv())

PASTA_TEMP = Path(__file__).parent / 'temp'
PASTA_TEMP.mkdir(exist_ok=True)
ARQUIVO_AUDIO_TEMP = PASTA_TEMP / 'audio.mp3'

# Inicializa o cliente OpenAI com a chave API
api_key = os.getenv('OPENAI_API_KEY')
if not api_key:
    st.error("‚ùå Chave API da OpenAI n√£o encontrada! Verifique o arquivo .env")
    st.stop()

client = openai.OpenAI(api_key=api_key)

def transcreve_audio(arquivo_audio, prompt):
    """Transcreve √°udio usando a API da OpenAI"""
    transcricao = client.audio.transcriptions.create(
        model='whisper-1',
        language='pt',
        response_format='text',
        file=arquivo_audio,
        prompt=prompt,
    )
    return transcricao

def transcreve_tab_video():
    """Aba para orienta√ß√µes sobre v√≠deos"""
    st.info("üìπ Para transcrever v√≠deos, primeiro extraia o √°udio usando um conversor online")
    
    st.markdown("""
    ### Como transcrever v√≠deos:
    
    1. **Extraia o √°udio do v√≠deo** usando uma dessas op√ß√µes:
       - [Online Audio Converter](https://online-audio-converter.com/)
       - [CloudConvert](https://cloudconvert.com/mp4-to-mp3)
       - [Convertio](https://convertio.co/mp4-mp3/)
    
    2. **Fa√ßa upload do arquivo de √°udio** na aba "üéµ √Åudio"
    
    3. **Aguarde a transcri√ß√£o** ser processada
    """)
    
    st.warning("‚ö†Ô∏è A funcionalidade de processamento autom√°tico de v√≠deo foi temporariamente desabilitada para garantir compatibilidade com o ambiente de deploy.")

# TRANSCREVE AUDIO =====================================
def transcreve_tab_audio():
    """Aba para transcri√ß√£o de arquivos de √°udio"""
    st.info("üéµ Fa√ßa upload de um arquivo de √°udio (.mp3, .wav, .m4a) para transcri√ß√£o")
    
    prompt_input = st.text_input('(opcional) Digite um prompt para melhorar a transcri√ß√£o', key='input_audio')
    arquivo_audio = st.file_uploader('Selecione um arquivo de √°udio', type=['mp3', 'wav', 'm4a', 'ogg'])
    
    if arquivo_audio is not None:
        with st.spinner('üéµ Transcrevendo √°udio...'):
            try:
                transcricao = transcreve_audio(arquivo_audio, prompt_input)
                st.success("‚úÖ Transcri√ß√£o conclu√≠da!")
                st.write("### Resultado:")
                st.write(transcricao)
            except Exception as e:
                st.error(f"‚ùå Erro ao transcrever √°udio: {str(e)}")

# MAIN =====================================
def main():
    st.set_page_config(
        page_title="Ai Infinitus Transcript",
        page_icon="üéôÔ∏è",
        layout="wide"
    )
    
    st.header('Bem-vindo ao Ai Infinitus Transcript üéôÔ∏è', divider=True)
    st.markdown('#### Transcreva √°udio de v√≠deos e arquivos de √°udio usando IA')
    
    # Removemos a aba de microfone para evitar problemas com audioop/pyaudioop
    tab_video, tab_audio = st.tabs(['üìπ V√≠deo', 'üéµ √Åudio'])
    
    with tab_video:
        transcreve_tab_video()
    with tab_audio:
        transcreve_tab_audio()

if __name__ == '__main__':
    main()
